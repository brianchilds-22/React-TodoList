{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a19723.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n    <button \r\n    onClick={onClick}\r\n    style={{ backgroundColor: color }} \r\n    className='btn'>\r\n        {text}\r\n    </button>\r\n)\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : \"Add\"} onClick={onAdd} />\r\n           \r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title:'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// const headingStyle = {\r\n//  with style tag style = {headingStyle} \r\n// }\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa' \r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ?\r\n        'reminder' : '' }`}\r\n        onDoubleClick={() =>\r\n        onToggle(task.id)} >\r\n            <h3>\r\n                {task.text} <FaTimes \r\n                style={{ color: 'red', cursor:'pointer' }} \r\n                onClick={() => onDelete(task.id)} />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n            <Task key={task.id} \r\n            task={task} \r\n            onDelete={onDelete}\r\n            onToggle={onToggle} \r\n            />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                type='text' \r\n                placeholder='Add Task' \r\n                value={text} \r\n                onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input \r\n                type='text' \r\n                placeholder='Add Day & Time' \r\n                value={day} \r\n                onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                checked={reminder}\r\n                value={reminder} \r\n                onChange={(e) => setReminder(e.currentTarget.checked)} \r\n                />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n\r\n","import { useState } from 'react'\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n  const [showAddTask , setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'feb 5 at 3',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Dev meeting',\n        day: 'feb 7 at 4',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Drinks',\n        day: 'feb 9 at 7',\n        reminder: true,\n    }\n])\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() *10000) + 1\n  const newTask = { id, ...task }\n  setTasks ([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !==id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? { ...task, reminder: \n      !task.reminder} : task\n      )\n    )\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask (!showAddTask)} \n      showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n      <Tasks tasks={tasks}\n      onDelete={deleteTask} \n      onToggle={toggleReminder}\n      />\n       ) : ( 'No Tasks to Show' )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}